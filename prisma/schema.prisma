generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tool {
  id             String          @id @default(cuid())
  nameKey        String          @unique
  toolKey        String          @unique
  slug           String          @unique
  descriptionKey String?
  isFeatured     Boolean         @default(false)
  iconClass      String?
  displayOrder   Int             @default(0)
  usageCount     Int             @default(0)
  isActive       Boolean         @default(true)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  tags           ToolTag[]
  usages         ToolUsage[]
  toolUsageStats ToolUsageStats?
}

model Tag {
  id             String    @id @default(cuid())
  nameKey        String    @unique
  slug           String    @unique
  tagKey         String    @unique
  descriptionKey String?
  iconClass      String?
  displayOrder   Int       @default(0)
  isActive       Boolean   @default(true)
  createdAt      DateTime  @default(now())
  tools          ToolTag[]
}

model ToolTag {
  toolId     String
  tagId      String
  assignedAt DateTime @default(now())
  tag        Tag      @relation(fields: [tagId], references: [id])
  tool       Tool     @relation(fields: [toolId], references: [id])

  @@id([toolId, tagId])
}

model ToolUsageStats {
  id         String   @id @default(cuid())
  toolId     String   @unique
  usageCount Int      @default(0)
  lastUsed   DateTime @default(now())
  tool       Tool     @relation(fields: [toolId], references: [id])
}

model ToolUsage {
  id        String   @id @default(cuid())
  toolId    String
  timestamp DateTime @default(now())
  metadata  Json?
  tool      Tool     @relation(fields: [toolId], references: [id])
}

model AdminUser {
  id           String          @id @default(cuid())
  username     String          @unique
  email        String          @unique
  passwordHash String
  role         String          @default("ADMIN")
  isActive     Boolean         @default(true)
  lastLoginAt  DateTime?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  auditLogs    AdminAuditLog[]
}

model AdminAuditLog {
  id          String    @id @default(cuid())
  adminUserId String
  action      String
  tableName   String
  recordId    String
  oldValues   Json?
  newValues   Json?
  ipAddress   String
  userAgent   String
  createdAt   DateTime  @default(now())
  adminUser   AdminUser @relation(fields: [adminUserId], references: [id])
}
