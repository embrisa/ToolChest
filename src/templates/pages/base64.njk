{# src/templates/pages/base64.njk #}
{% extends "../layouts/base.njk" %}
{% from "../components/macros.njk" import input %}

{% block title %}{{ tool.name | default('Base64 Encoder/Decoder') }} - {{ appName }}{% endblock %}
{% block description %}{{ tool.description | default('Encode to Base64 or decode from Base64. Supports URL-safe encoding and file processing.') }}{% endblock %}

{% block content %}
    <h1 class="text-3xl font-bold mb-2 text-white">{{ tool.name | default('Base64 Encoder/Decoder') }}</h1>
    <p class="text-gray-300 mb-6">{{ tool.description | default('Encode to Base64 or decode from Base64. Supports URL-safe encoding and file processing.') }}</p>

    <div id="base64-result-container" class="mb-6"></div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {# Encode Text #}
        <section class="rounded-lg p-6 border border-ocean-400/10 backdrop-blur-md bg-navy-800/40 shadow-lg">
            <h2 class="text-2xl font-semibold mb-4 text-ocean-100">Encode Text to Base64</h2>
            <form hx-post="/base64/encode" hx-target="#base64-result-container" hx-swap="innerHTML">
                <div class="mb-4">
                    <label for="textToEncode" class="block text-sm font-medium text-gray-300 mb-1">Text to Encode:</label>
                    {{ input(name='text', type='textarea', placeholder='Enter text to encode...', class='bg-ocean-100/10 border-ocean-400/20 text-white placeholder-gray-500 rounded-md') }}
                </div>
                <div class="mb-4">
                    <input type="checkbox" id="urlSafeEncode" name="urlSafe" value="true" class="mr-2">
                    <label for="urlSafeEncode" class="text-sm font-medium text-gray-300">URL Safe?</label>
                </div>
                <button type="submit" class="btn-primary">Encode</button>
            </form>
        </section>

        {# Decode Text #}
        <section class="rounded-lg p-6 border border-ocean-400/10 backdrop-blur-md bg-navy-800/40 shadow-lg">
            <h2 class="text-2xl font-semibold mb-4 text-ocean-100">Decode Base64 to Text</h2>
            <form hx-post="/base64/decode" hx-target="#base64-result-container" hx-swap="innerHTML">
                <div class="mb-4">
                    <label for="textToDecode" class="block text-sm font-medium text-gray-300 mb-1">Base64 to Decode:</label>
                    {{ input(name='text', type='textarea', placeholder='Enter Base64 string to decode...', class='bg-ocean-100/10 border-ocean-400/20 text-white placeholder-gray-500 rounded-md') }}
                </div>
                <div class="mb-4">
                    <input type="checkbox" id="urlSafeDecode" name="urlSafe" value="true" class="mr-2">
                    <label for="urlSafeDecode" class="text-sm font-medium text-gray-300">URL Safe?</label>
                </div>
                <button type="submit" class="btn-primary">Decode</button>
            </form>
        </section>

        {# Encode File #}
        <section class="md:col-span-2 mt-8 border-t border-white/10 pt-8">
            <h2 class="text-2xl font-semibold mb-4 text-ocean-100">Encode File to Base64</h2>
            <form hx-post="/base64/encode-file" hx-target="#base64-result-container" hx-swap="innerHTML" hx-encoding="multipart/form-data" class="dropzone flex flex-col items-center justify-center">
                <p class="text-gray-300">Drag & drop a file or click to browse</p>
                <input type="file" id="fileToEncode" name="file" class="hidden" required>
                <div class="mb-4 mt-4 flex items-center">
                    <input type="checkbox" id="urlSafeEncodeFile" name="urlSafe" value="true" class="mr-2">
                    <label for="urlSafeEncodeFile" class="text-sm font-medium text-gray-300">URL Safe?</label>
                </div>
            </form>
        </section>

        {# Decode File - This is a direct download, so no HTMX target needed for the form itself #}
        <section class="md:col-span-2 mt-8 border-t border-white/10 pt-8">
            <h2 class="text-2xl font-semibold mb-4 text-ocean-100">Decode Base64 to File</h2>
            <form action="/base64/decode-file" method="POST" class="rounded-lg p-6 border border-ocean-400/10 backdrop-blur-md bg-navy-800/40 shadow-lg">
                <div class="mb-4">
                    <label for="textToDecodeFile" class="block text-sm font-medium text-gray-300 mb-1">Base64 to Decode:</label>
                    {{ input(name='text', type='textarea', placeholder='Enter Base64 string for file content...', class='bg-ocean-100/10 border-ocean-400/20 text-white placeholder-gray-500 rounded-md') }}
                </div>
                <div class="mb-4">
                    <label for="fileNameDecode" class="block text-sm font-medium text-gray-300 mb-1">Output File Name:</label>
                    {{ input(name='fileName', placeholder='e.g., decoded_file.txt', value='decoded_file.txt', class='bg-ocean-100/10 border-ocean-400/20 text-white placeholder-gray-500 rounded-md') }}
                </div>
                <div class="mb-4">
                    <input type="checkbox" id="urlSafeDecodeFile" name="urlSafe" value="true" class="mr-2">
                    <label for="urlSafeDecodeFile" class="text-sm font-medium text-gray-300">URL Safe?</label>
                </div>
                <button type="submit" class="btn-primary">Decode and Download File</button>
            </form>
        </section>
    </div>
{% endblock %}

{% block bodyScripts %}
<script>
    // Make the dropzone work with the file input
    document.addEventListener('DOMContentLoaded', function() {
        const dropzone = document.querySelector('.dropzone');
        const fileInput = document.getElementById('fileToEncode');
        
        if (dropzone && fileInput) {
            // Click on dropzone triggers file input click
            dropzone.addEventListener('click', function(e) {
                if (e.target !== fileInput) {
                    fileInput.click();
                }
            });
            
            // File input change triggers form submission
            fileInput.addEventListener('change', function() {
                if (fileInput.files.length > 0) {
                    dropzone.classList.add('bg-ocean-100/20');
                    setTimeout(() => {
                        dropzone.closest('form').submit();
                    }, 300);
                }
            });
            
            // Drag and drop functionality
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropzone.addEventListener(eventName, function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                }, false);
            });
            
            ['dragenter', 'dragover'].forEach(eventName => {
                dropzone.addEventListener(eventName, function() {
                    dropzone.classList.add('bg-ocean-100/30');
                }, false);
            });
            
            ['dragleave', 'drop'].forEach(eventName => {
                dropzone.addEventListener(eventName, function() {
                    dropzone.classList.remove('bg-ocean-100/30');
                }, false);
            });
            
            dropzone.addEventListener('drop', function(e) {
                fileInput.files = e.dataTransfer.files;
                if (fileInput.files.length > 0) {
                    dropzone.classList.add('bg-ocean-100/20');
                    setTimeout(() => {
                        dropzone.closest('form').submit();
                    }, 300);
                }
            }, false);
        }
    });
</script>
{% endblock %} 