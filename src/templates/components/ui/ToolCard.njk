{#
  ToolCard Component
  
  Purpose: Clickable cards for tools/features with icons, descriptions, and tags
  
  Props:
  - tool (object, required):
    - slug (string): URL routing
    - name (string): Display name
    - description (string): Description text
    - iconClass (string, optional): FontAwesome class (defaults to 'fas fa-toolbox')
    - tags (array, optional): Array of tag objects with name and color
  - showTags (boolean, default: true): Whether to display tags
  - variant ('modern' | 'compact', default: 'modern'): Card style variant
  - maxDescriptionLength (number, default: 120): Character limit for description
  - containerClass (string, optional): Additional CSS classes
  
  Usage:
  {{ ToolCard(tool=tool) }}
#}

{# Import dependencies at the top level #}
{% from 'components/layout/ResponsiveGrid.njk' import ResponsiveGrid %}
{% from 'components/ui/EmptyState.njk' import EmptyState %}
{% from 'components/ui/IconContainer.njk' import IconContainer %}

{% macro ToolCard(tool, showTags=true, variant='modern', maxDescriptionLength=120, containerClass='') %}
  {% set baseClasses = 'tool-card tool-card-' + variant %}
  {% set iconClass = tool.iconClass or 'fas fa-toolbox' %}
  {% set description = tool.description | truncate(maxDescriptionLength, true) %}
  
  {% if variant == 'modern' %}
    {% set cardClasses = 'relative glass-light rounded-2xl p-6 transition-all duration-300 hover:shadow-lg hover:border-blue-500/20 group cursor-pointer' %}
    {% set iconContainerClasses = 'w-16 h-16 rounded-2xl glass-medium flex items-center justify-center mb-4 group-hover:scale-105 transition-transform duration-300' %}
    {% set titleClasses = 'text-xl font-semibold text-sand-100 mb-2 group-hover:text-sand-200 transition-colors duration-300' %}
    {% set descriptionClasses = 'text-neutral-300 text-sm leading-relaxed mb-4 flex-grow' %}
    {% set tagsContainerClasses = 'flex flex-wrap gap-2 mt-auto' %}
    {% set hoverIndicatorClasses = 'absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300 text-sand-200' %}
    {% set iconSize = 'text-2xl' %}
  {% else %}
    {# Compact variant #}
    {% set cardClasses = 'relative glass-light rounded-xl p-4 transition-all duration-300 hover:shadow-md hover:border-blue-500/15 group cursor-pointer' %}
    {% set iconContainerClasses = 'w-12 h-12 rounded-xl glass-medium flex items-center justify-center mb-3 group-hover:scale-105 transition-transform duration-300' %}
    {% set titleClasses = 'text-lg font-semibold text-sand-100 mb-1 group-hover:text-sand-200 transition-colors duration-300' %}
    {% set descriptionClasses = 'text-neutral-400 text-xs leading-relaxed mb-3 flex-grow' %}
    {% set tagsContainerClasses = 'flex flex-wrap gap-1 mt-auto' %}
    {% set hoverIndicatorClasses = 'absolute top-3 right-3 opacity-0 group-hover:opacity-100 transition-opacity duration-300 text-sand-200 text-sm' %}
    {% set iconSize = 'text-lg' %}
  {% endif %}

  <a href="/{{ tool.slug }}" class="{{ baseClasses }} {{ cardClasses }} {{ containerClass }}">
    {# Icon Container #}
    <div class="{{ iconContainerClasses }}">
      <i class="{{ iconClass }} text-sand-200 {{ iconSize }}"></i>
    </div>
    
    {# Title #}
    <h3 class="{{ titleClasses }}">
      {{ tool.name }}
    </h3>
    
    {# Description - now with flex-grow to fill available space #}
    <p class="{{ descriptionClasses }}">
      {{ description }}
    </p>
    
    {# Simple Tags without TagBadge component - now with mt-auto to stick to bottom #}
    {% if showTags and tool.tags and tool.tags|length > 0 %}
      <div class="{{ tagsContainerClasses }}">
        {% for tag in tool.tags %}
          <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-white/10 text-sand-200 border border-white/20">
            {{ tag.name }}
          </span>
        {% endfor %}
      </div>
    {% else %}
      {# Empty spacer to maintain consistent spacing when no tags #}
      <div class="mt-auto"></div>
    {% endif %}
    
    {# Hover Indicator #}
    <div class="{{ hoverIndicatorClasses }}">
      <i class="fas fa-arrow-right"></i>
    </div>
  </a>
{% endmacro %}

{#
  ToolCardGrid Component
  
  Grid container for multiple tool cards with responsive layout
  
  Props:
  - tools (array, required): Array of tool objects
  - variant ('modern' | 'compact', default: 'modern'): Card variant
  - showTags (boolean, default: true): Whether to show tags on cards
  - emptyStateTitle (string, optional): Title for empty state
  - emptyStateDescription (string, optional): Description for empty state
  - containerClass (string, optional): Additional CSS classes
#}

{% macro ToolCardGrid(tools, variant='modern', showTags=true, emptyStateTitle='No Tools Available', emptyStateDescription='Check back later for new tools and utilities.', containerClass='') %}
  {% if tools and tools|length > 0 %}
    {% if variant == 'compact' %}
      {% set gridVariant = 'cards-compact' %}
    {% else %}
      {% set gridVariant = 'cards' %}
    {% endif %}
    
    {% call ResponsiveGrid(
      variant=gridVariant,
      className=containerClass
    ) %}
      {% for tool in tools %}
        {{ ToolCard(tool=tool, variant=variant, showTags=showTags) }}
      {% endfor %}
    {% endcall %}
  {% else %}
    {# Empty State #}
    {{ EmptyState(
      icon='fas fa-toolbox',
      title=emptyStateTitle,
      description=emptyStateDescription
    ) }}
  {% endif %}
{% endmacro %}

{#
  FeatureCard Component
  
  Simplified card for features/benefits without navigation
  
  Props:
  - title (string, required): Feature title
  - description (string, required): Feature description
  - icon (string, default: 'fas fa-star'): FontAwesome icon class
  - iconVariant (string, default: 'sand'): Icon container variant
  - variant ('modern' | 'compact', default: 'modern'): Card style
#}

{% macro FeatureCard(title, description, icon='fas fa-star', iconVariant='sand', variant='modern', containerClass='') %}
  {% if variant == 'modern' %}
    {% set cardClasses = 'glass-light rounded-2xl p-6 text-center' %}
    {% set iconContainerClasses = 'w-16 h-16 mx-auto mb-4' %}
    {% set titleClasses = 'text-xl font-semibold text-sand-100 mb-3' %}
    {% set descriptionClasses = 'text-neutral-300 text-sm leading-relaxed' %}
    {% set iconSize = 'lg' %}
  {% else %}
    {% set cardClasses = 'glass-light rounded-xl p-4 text-center' %}
    {% set iconContainerClasses = 'w-12 h-12 mx-auto mb-3' %}
    {% set titleClasses = 'text-lg font-semibold text-sand-100 mb-2' %}
    {% set descriptionClasses = 'text-neutral-400 text-xs leading-relaxed' %}
    {% set iconSize = 'md' %}
  {% endif %}

  <div class="{{ cardClasses }} {{ containerClass }}">
    <div class="{{ iconContainerClasses }}">
      {{ IconContainer(
        size=iconSize,
        icon=icon,
        variant=iconVariant
      ) }}
    </div>
    
    <h3 class="{{ titleClasses }}">
      {{ title }}
    </h3>
    
    <p class="{{ descriptionClasses }}">
      {{ description }}
    </p>
  </div>
{% endmacro %} 