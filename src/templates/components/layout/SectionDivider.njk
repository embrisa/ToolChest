{# Section Divider Component Library #}

{# Main SectionDivider Component #}
{% macro SectionDivider(config = {}) %}
  {% set defaults = {
    variant: 'line',
    spacing: 'md',
    color: 'neutral',
    opacity: 10,
    content: null,
    alignment: 'center',
    icon: null,
    text: null
  } %}
  {% set cfg = defaults | merge(config) %}

  {# Spacing classes #}
  {% set spacingClasses = {
    'xs': 'my-4',
    'sm': 'my-6',
    'md': 'my-8',
    'lg': 'my-12',
    'xl': 'my-16',
    '2xl': 'my-24'
  }[cfg.spacing] %}

  {# Color and opacity classes #}
  {% set colorClasses = {
    'neutral': 'border-neutral-300/' + cfg.opacity|string,
    'sand': 'border-sand-300/' + cfg.opacity|string,
    'apple-blue': 'border-apple-blue/' + cfg.opacity|string,
    'error': 'border-error/' + cfg.opacity|string,
    'success': 'border-success/' + cfg.opacity|string,
    'warning': 'border-warning/' + cfg.opacity|string
  }[cfg.color] %}

  {% if cfg.variant == 'line' %}
    {# Simple line divider #}
    <div class="section-divider {{ spacingClasses }}">
      <hr class="border-t {{ colorClasses }}">
    </div>

  {% elif cfg.variant == 'content' %}
    {# Divider with content in the middle #}
    <div class="section-divider {{ spacingClasses }}">
      <div class="relative">
        <div class="absolute inset-0 flex items-center">
          <hr class="w-full border-t {{ colorClasses }}">
        </div>
        <div class="relative flex justify-{{ cfg.alignment }}">
          <div class="section-divider-content px-4 py-2 navbar-modern rounded-xl">
            {% if cfg.icon %}
              <i class="{{ cfg.icon }} text-{{ cfg.color }}-300 mr-2"></i>
            {% endif %}
            {% if cfg.text %}
              <span class="text-{{ cfg.color }}-300 text-sm font-medium">{{ cfg.text }}</span>
            {% endif %}
            {% if cfg.content %}
              {{ cfg.content | safe }}
            {% endif %}
          </div>
        </div>
      </div>
    </div>

  {% elif cfg.variant == 'gradient' %}
    {# Gradient divider #}
    <div class="section-divider {{ spacingClasses }}">
      <div class="h-px bg-gradient-to-r from-transparent via-{{ cfg.color }}-300/{{ cfg.opacity }} to-transparent"></div>
    </div>

  {% elif cfg.variant == 'dots' %}
    {# Dotted pattern divider #}
    <div class="section-divider {{ spacingClasses }} text-center">
      <div class="flex items-center justify-center space-x-2">
        <div class="w-1 h-1 rounded-full bg-{{ cfg.color }}-300/{{ cfg.opacity }}"></div>
        <div class="w-1 h-1 rounded-full bg-{{ cfg.color }}-300/{{ cfg.opacity }}"></div>
        <div class="w-1 h-1 rounded-full bg-{{ cfg.color }}-300/{{ cfg.opacity }}"></div>
      </div>
    </div>

  {% elif cfg.variant == 'ornamental' %}
    {# Ornamental divider with decorative elements #}
    <div class="section-divider {{ spacingClasses }}">
      <div class="relative">
        <div class="absolute inset-0 flex items-center">
          <hr class="w-full border-t {{ colorClasses }}">
        </div>
        <div class="relative flex justify-center">
          <div class="section-divider-ornament w-8 h-8 navbar-modern rounded-full flex items-center justify-center">
            {% if cfg.icon %}
              <i class="{{ cfg.icon }} text-{{ cfg.color }}-300 text-xs"></i>
            {% else %}
              <div class="w-2 h-2 rounded-full bg-{{ cfg.color }}-300/{{ cfg.opacity }}"></div>
            {% endif %}
          </div>
        </div>
      </div>
    </div>

  {% elif cfg.variant == 'section' %}
    {# Section header divider #}
    <div class="section-divider section-header {{ spacingClasses }}">
      {% if cfg.text or cfg.content %}
        <div class="flex items-center justify-between pb-4 border-b {{ colorClasses }}">
          <div class="flex items-center">
            {% if cfg.icon %}
              <div class="icon-container-{{ cfg.color }} w-8 h-8 rounded-xl flex items-center justify-center mr-3">
                <i class="{{ cfg.icon }} text-sm"></i>
              </div>
            {% endif %}
            {% if cfg.text %}
              <h3 class="text-sand-200 font-semibold text-lg">{{ cfg.text }}</h3>
            {% endif %}
            {% if cfg.content %}
              {{ cfg.content | safe }}
            {% endif %}
          </div>
        </div>
      {% else %}
        <hr class="border-t {{ colorClasses }}">
      {% endif %}
    </div>

  {% elif cfg.variant == 'space' %}
    {# Just spacing without visible divider #}
    <div class="section-divider {{ spacingClasses }}"></div>

  {% endif %}
{% endmacro %}

{# Simple divider shortcuts #}
{% macro LineDivider(spacing = 'md', color = 'neutral', opacity = 10) %}
  {{ SectionDivider({
    variant: 'line',
    spacing: spacing,
    color: color,
    opacity: opacity
  }) }}
{% endmacro %}

{% macro GradientDivider(spacing = 'md', color = 'sand', opacity = 20) %}
  {{ SectionDivider({
    variant: 'gradient',
    spacing: spacing,
    color: color,
    opacity: opacity
  }) }}
{% endmacro %}

{% macro DotDivider(spacing = 'md', color = 'neutral', opacity = 30) %}
  {{ SectionDivider({
    variant: 'dots',
    spacing: spacing,
    color: color,
    opacity: opacity
  }) }}
{% endmacro %}

{% macro SpaceDivider(spacing = 'md') %}
  {{ SectionDivider({
    variant: 'space',
    spacing: spacing
  }) }}
{% endmacro %}

{# Content dividers #}
{% macro TextDivider(text, spacing = 'md', color = 'neutral', icon = null) %}
  {{ SectionDivider({
    variant: 'content',
    spacing: spacing,
    color: color,
    text: text,
    icon: icon
  }) }}
{% endmacro %}

{% macro IconDivider(icon, spacing = 'md', color = 'sand') %}
  {{ SectionDivider({
    variant: 'ornamental',
    spacing: spacing,
    color: color,
    icon: icon
  }) }}
{% endmacro %}

{% macro SectionHeader(title, icon = null, spacing = 'lg', color = 'sand') %}
  {{ SectionDivider({
    variant: 'section',
    spacing: spacing,
    color: color,
    text: title,
    icon: icon
  }) }}
{% endmacro %}

{# Time-based dividers #}
{% macro TimeDivider(date, format = 'relative', spacing = 'md') %}
  {% if format == 'relative' %}
    {% set timeText = date | timeAgo %}
  {% elif format == 'date' %}
    {% set timeText = date | date('MMMM D, YYYY') %}
  {% else %}
    {% set timeText = date | date(format) %}
  {% endif %}

  {{ SectionDivider({
    variant: 'content',
    spacing: spacing,
    color: 'neutral',
    text: timeText,
    icon: 'fas fa-clock'
  }) }}
{% endmacro %}

{# Status dividers for different states #}
{% macro StatusDivider(status, text = null, spacing = 'md') %}
  {% set statusConfig = {
    'success': { color: 'success', icon: 'fas fa-check-circle' },
    'error': { color: 'error', icon: 'fas fa-exclamation-circle' },
    'warning': { color: 'warning', icon: 'fas fa-exclamation-triangle' },
    'info': { color: 'apple-blue', icon: 'fas fa-info-circle' },
    'processing': { color: 'neutral', icon: 'fas fa-spinner fa-spin' }
  }[status] %}

  {{ SectionDivider({
    variant: 'content',
    spacing: spacing,
    color: statusConfig.color,
    text: text or (status | title),
    icon: statusConfig.icon
  }) }}
{% endmacro %}

{# Breadcrumb divider (for use within breadcrumbs) #}
{% macro BreadcrumbDivider(separator = 'chevron') %}
  <span class="breadcrumb-separator text-neutral-400 mx-2">
    {% if separator == 'chevron' %}
      <i class="fas fa-chevron-right text-xs"></i>
    {% elif separator == 'slash' %}
      /
    {% elif separator == 'arrow' %}
      →
    {% elif separator == 'dot' %}
      •
    {% else %}
      {{ separator }}
    {% endif %}
  </span>
{% endmacro %} 