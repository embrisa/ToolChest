/* ================================================================
   ANIMATION UTILITIES & VISUAL EFFECTS
   CSS for advanced animations, transitions, and visual effects
   ================================================================ */

/* === GRADIENT TEXT UTILITIES === */

.gradient-text {
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% 100%;
    position: relative;
}

.gradient-text-animated {
    animation: gradient-shift 3s ease-in-out infinite;
    background-size: 200% 100%;
}

@keyframes gradient-shift {

    0%,
    100% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }
}

.gradient-heading {
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'Segoe UI', system-ui, sans-serif;
    font-weight: 700;
    letter-spacing: -0.025em;
    line-height: 1.2;
}

/* Safari fallback for gradient text */
@supports not (background-clip: text) {
    .gradient-text {
        color: var(--sand-600);
        -webkit-text-fill-color: initial;
    }
}

/* === HOVER INDICATOR UTILITIES === */

.hover-indicator {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: all 0.2s ease-out;
    pointer-events: none;
}

.hover-indicator-always {
    opacity: 1;
}

.hover-indicator-animated {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-indicator-right {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
}

.hover-indicator-left {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
}

.hover-indicator-top {
    position: absolute;
    top: 0.5rem;
    left: 50%;
    transform: translateX(-50%);
}

.hover-indicator-bottom {
    position: absolute;
    bottom: 0.5rem;
    left: 50%;
    transform: translateX(-50%);
}

.hover-indicator-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* Hover card wrapper */
.hover-card:hover .hover-indicator {
    opacity: 1;
}

.hover-card {
    transition: all 0.3s ease-out;
}

.hover-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px -8px rgba(0, 0, 0, 0.1);
}

/* Icon hover indicator */
.icon-hover-indicator:hover .icon-default {
    opacity: 0;
}

.icon-hover-indicator:hover .icon-hover {
    opacity: 1;
}

/* Text with indicator */
.text-with-indicator {
    transition: all 0.2s ease-out;
}

.text-with-indicator:hover {
    color: var(--apple-blue);
}

/* Button with indicator */
.btn-with-indicator .hover-indicator {
    opacity: 0.7;
}

.btn-with-indicator:hover .hover-indicator {
    opacity: 1;
}

/* Status indicator styles */
.status-indicator {
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

.status-indicator-animated {
    animation: status-pulse 2s ease-in-out infinite;
}

.status-indicator-pulse {
    animation: status-strong-pulse 1.5s ease-in-out infinite;
}

@keyframes status-pulse {

    0%,
    100% {
        opacity: 1;
        transform: scale(1);
    }

    50% {
        opacity: 0.7;
        transform: scale(1.05);
    }
}

@keyframes status-strong-pulse {

    0%,
    100% {
        opacity: 1;
        transform: scale(1);
    }

    50% {
        opacity: 0.5;
        transform: scale(1.1);
    }
}

/* === TRANSITION EFFECTS === */

/* Animation base classes */
.animated-element {
    transition-property: all;
    animation-fill-mode: both;
}

/* Animation durations */
.animation-duration-150 {
    animation-duration: 150ms;
}

.animation-duration-300 {
    animation-duration: 300ms;
}

.animation-duration-500 {
    animation-duration: 500ms;
}

.animation-duration-custom {
    animation-duration: var(--animation-duration, 300ms);
}

/* Animation delays */
.animation-delay-100 {
    animation-delay: 100ms;
}

.animation-delay-300 {
    animation-delay: 300ms;
}

.animation-delay-500 {
    animation-delay: 500ms;
}

.animation-delay-custom {
    animation-delay: var(--animation-delay, 0ms);
}

/* Animation timing functions */
.animation-timing-linear {
    animation-timing-function: linear;
}

.animation-timing-ease {
    animation-timing-function: ease;
}

.animation-timing-ease-in {
    animation-timing-function: ease-in;
}

.animation-timing-ease-out {
    animation-timing-function: ease-out;
}

.animation-timing-ease-in-out {
    animation-timing-function: ease-in-out;
}

.animation-timing-bounce {
    animation-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.animation-timing-custom {
    animation-timing-function: var(--animation-timing, ease-out);
}

/* Animation iteration */
.animation-infinite {
    animation-iteration-count: infinite;
}

/* Trigger classes */
.animate-on-hover {
    /* Base state - no animation */
}

.animate-on-hover:hover {
    /* Animation triggers on hover */
}

.animate-on-focus {
    /* Base state - no animation */
}

.animate-on-focus:focus {
    /* Animation triggers on focus */
}

/* === KEYFRAME ANIMATIONS === */

@keyframes fade-in {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes fade-out {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}

@keyframes slide-in-left {
    from {
        opacity: 0;
        transform: translateX(-100%);
    }

    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes slide-in-right {
    from {
        opacity: 0;
        transform: translateX(100%);
    }

    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes slide-in-up {
    from {
        opacity: 0;
        transform: translateY(100%);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slide-in-down {
    from {
        opacity: 0;
        transform: translateY(-100%);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes scale-in {
    from {
        opacity: 0;
        transform: scale(0.5);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes scale-out {
    from {
        opacity: 1;
        transform: scale(1);
    }

    to {
        opacity: 0;
        transform: scale(1.5);
    }
}

@keyframes bounce-in {
    0% {
        opacity: 0;
        transform: scale(0.3);
    }

    50% {
        opacity: 1;
        transform: scale(1.05);
    }

    70% {
        transform: scale(0.9);
    }

    100% {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes shake {

    0%,
    100% {
        transform: translateX(0);
    }

    10%,
    30%,
    50%,
    70%,
    90% {
        transform: translateX(-10px);
    }

    20%,
    40%,
    60%,
    80% {
        transform: translateX(10px);
    }
}

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

@keyframes float {

    0%,
    100% {
        transform: translateY(0px);
    }

    50% {
        transform: translateY(-10px);
    }
}

@keyframes glow {
    from {
        text-shadow: 0 0 20px var(--glow-color, #fff), 0 0 30px var(--glow-color, #fff), 0 0 40px var(--glow-color, #fff);
    }

    to {
        text-shadow: 0 0 20px var(--glow-color, #fff), 0 0 30px var(--glow-color, #fff), 0 0 40px var(--glow-color, #fff), 0 0 50px var(--glow-color, #fff), 0 0 60px var(--glow-color, #fff);
    }
}

@keyframes blur-in {
    from {
        filter: blur(12px);
        opacity: 0;
    }

    to {
        filter: blur(0px);
        opacity: 1;
    }
}

@keyframes zoom-in {
    from {
        opacity: 0;
        transform: scale(0);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes flip-x {
    from {
        transform: perspective(400px) rotateX(90deg);
        animation-timing-function: ease-in;
        opacity: 0;
    }

    40% {
        transform: perspective(400px) rotateX(-20deg);
        animation-timing-function: ease-in;
    }

    60% {
        transform: perspective(400px) rotateX(10deg);
        opacity: 1;
    }

    80% {
        transform: perspective(400px) rotateX(-5deg);
    }

    to {
        transform: perspective(400px);
    }
}

@keyframes flip-y {
    from {
        transform: perspective(400px) rotateY(90deg);
        animation-timing-function: ease-in;
        opacity: 0;
    }

    40% {
        transform: perspective(400px) rotateY(-20deg);
        animation-timing-function: ease-in;
    }

    60% {
        transform: perspective(400px) rotateY(10deg);
        opacity: 1;
    }

    80% {
        transform: perspective(400px) rotateY(-5deg);
    }

    to {
        transform: perspective(400px);
    }
}

/* === ANIMATION UTILITY CLASSES === */

.animate-fade-in {
    animation: fade-in 0.3s ease-out;
}

.animate-fade-out {
    animation: fade-out 0.3s ease-out;
}

.animate-slide-in-left {
    animation: slide-in-left 0.5s ease-out;
}

.animate-slide-in-right {
    animation: slide-in-right 0.5s ease-out;
}

.animate-slide-in-up {
    animation: slide-in-up 0.5s ease-out;
}

.animate-slide-in-down {
    animation: slide-in-down 0.5s ease-out;
}

.animate-scale-in {
    animation: scale-in 0.3s ease-out;
}

.animate-scale-out {
    animation: scale-out 0.3s ease-out;
}

.animate-bounce-in {
    animation: bounce-in 0.6s ease-out;
}

.animate-pulse {
    animation: status-pulse 2s ease-in-out infinite;
}

.animate-shake {
    animation: shake 0.5s ease-in-out;
}

.animate-rotate {
    animation: rotate 1s linear infinite;
}

.animate-float {
    animation: float 3s ease-in-out infinite;
}

.animate-glow {
    animation: glow 1.5s ease-in-out infinite alternate;
}

.animate-blur-in {
    animation: blur-in 0.6s ease-out;
}

.animate-zoom-in {
    animation: zoom-in 0.5s ease-out;
}

.animate-flip-x {
    animation: flip-x 0.6s ease-out;
}

.animate-flip-y {
    animation: flip-y 0.6s ease-out;
}

/* === SPECIAL EFFECTS === */

.loading-animation {
    animation: rotate 1s linear infinite;
}

.loading-animation::before {
    /* Loading spinner styles would go here */
}

.staggered-animation {
    /* Container for staggered child animations */
}

.stagger-item {
    opacity: 0;
    animation: slide-in-up 0.6s ease-out forwards;
}

/* Hover effects */
.hover-effect-subtle:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.hover-effect-normal:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.hover-effect-strong:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.25);
}

/* Scroll reveal */
.scroll-reveal {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

.scroll-reveal.revealed {
    opacity: 1;
    transform: translateY(0);
}

/* Parallax elements */
.parallax-element {
    will-change: transform;
    backface-visibility: hidden;
}

/* Morph transitions */
.morph-transition {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.morph-before,
.morph-after {
    transition: opacity 0.3s ease-in-out;
    position: absolute;
    top: 0;
    left: 0;
}

.glow-effect {
    --glow-color: var(--apple-blue);
}

.glow-effect.animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
}

/* Text animations */
.text-animation {
    display: inline-block;
}

.text-typewriter {
    overflow: hidden;
    border-right: 2px solid var(--sand-600);
    white-space: nowrap;
    margin: 0 auto;
    letter-spacing: 0.1em;
    animation:
        typing 3.5s steps(var(--text-length, 40), end),
        blink-caret 0.75s step-end infinite;
}

.text-rainbow {
    background: linear-gradient(45deg,
            #ff0000,
            #ff8000,
            #ffff00,
            #80ff00,
            #00ff00,
            #00ff80,
            #00ffff,
            #0080ff,
            #0000ff,
            #8000ff,
            #ff00ff,
            #ff0080);
    background-size: 600% 600%;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: rainbow-shift 3s ease-in-out infinite;
}

.text-glitch {
    position: relative;
}

.text-glitch::before,
.text-glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.text-glitch::before {
    animation: glitch-before 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both infinite;
    color: #ff0000;
    z-index: -1;
}

.text-glitch::after {
    animation: glitch-after 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both infinite;
    color: #00ffff;
    z-index: -2;
}

@keyframes typing {
    from {
        width: 0;
    }

    to {
        width: 100%;
    }
}

@keyframes blink-caret {

    from,
    to {
        border-color: transparent;
    }

    50% {
        border-color: var(--sand-600);
    }
}

@keyframes rainbow-shift {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }
}

@keyframes glitch {
    0% {
        transform: translate(0);
    }

    20% {
        transform: translate(-2px, 2px);
    }

    40% {
        transform: translate(-2px, -2px);
    }

    60% {
        transform: translate(2px, 2px);
    }

    80% {
        transform: translate(2px, -2px);
    }

    100% {
        transform: translate(0);
    }
}

@keyframes glitch-before {
    0% {
        clip-path: inset(40% 0 61% 0);
    }

    20% {
        clip-path: inset(92% 0 1% 0);
    }

    40% {
        clip-path: inset(43% 0 1% 0);
    }

    60% {
        clip-path: inset(25% 0 58% 0);
    }

    80% {
        clip-path: inset(54% 0 7% 0);
    }

    100% {
        clip-path: inset(58% 0 43% 0);
    }
}

@keyframes glitch-after {
    0% {
        clip-path: inset(25% 0 58% 0);
    }

    20% {
        clip-path: inset(54% 0 7% 0);
    }

    40% {
        clip-path: inset(58% 0 43% 0);
    }

    60% {
        clip-path: inset(40% 0 61% 0);
    }

    80% {
        clip-path: inset(92% 0 1% 0);
    }

    100% {
        clip-path: inset(43% 0 1% 0);
    }
}

/* === ACCESSIBILITY === */

/* Respect user's motion preferences */
@media (prefers-reduced-motion: reduce) {

    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }

    .gradient-text-animated,
    .hover-indicator-animated,
    .status-indicator-animated,
    .status-indicator-pulse,
    .loading-animation,
    .staggered-animation,
    .text-typewriter,
    .text-rainbow,
    .text-glitch,
    .scroll-reveal {
        animation: none !important;
    }
}